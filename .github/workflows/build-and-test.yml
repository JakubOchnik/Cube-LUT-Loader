name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release
  CONAN_PRESET: conan-release
  INSTALL_CUDA: ON

jobs:
  build_linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install CUDA
      if: env.INSTALL_CUDA == 'ON'
      uses: Jimver/cuda-toolkit@v0.2.15
      with:
        cuda: '12.4.1'
        method: 'network'
        sub-packages: '["nvcc", "cudart"]'

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Setup Conan profile
      run: conan profile detect

    - name: Install dependencies
      run: conan install . --build=missing -s build_type=${{env.BUILD_TYPE}}

    - name: Configure
      run: cmake --preset ${{env.CONAN_PRESET}} -DBUILD_TESTS=ON -DBUILD_CUDA=${{env.INSTALL_CUDA}}

    - name: Build
      run: cmake --build --preset ${{env.CONAN_PRESET}} --target lut_loader_test -j

    - name: Run unit tests
      working-directory: ${{github.workspace}}/src/test
      run: ${{github.workspace}}/build/${{env.BUILD_TYPE}}/src/test/lut_loader_test

  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install CUDA
      if: env.INSTALL_CUDA == 'ON'
      uses: Jimver/cuda-toolkit@v0.2.15
      with:
        cuda: '12.4.1'
        method: 'network'
        sub-packages: '["nvcc", "cudart", "visual_studio_integration"]'

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Setup Conan profile
      run: conan profile detect

    - name: Install dependencies
      run: conan install . --build=missing -s build_type=${{env.BUILD_TYPE}}

    - name: Configure
      run: cmake --preset conan-default -DBUILD_TESTS=ON -DBUILD_CUDA=${{env.INSTALL_CUDA}}

    - name: Build
      run: cmake --build --preset ${{env.CONAN_PRESET}} --target lut_loader_test -j

    - name: Run unit tests
      working-directory: ${{github.workspace}}/src/test
      run: ${{github.workspace}}\\build\\src\\test\\${{env.BUILD_TYPE}}\\lut_loader_test

  build_macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python 3.10
      # Make sure get-conan doesn't fail on macOS workflow
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Setup Conan profile
      run: conan profile detect

    - name: Install dependencies
      run: conan install . --build=missing -s build_type=${{env.BUILD_TYPE}}

    - name: Configure
      run: cmake --preset ${{env.CONAN_PRESET}} -DBUILD_TESTS=ON

    - name: Build
      run: cmake --build --preset ${{env.CONAN_PRESET}} --target lut_loader_test -j

    - name: Run unit tests
      working-directory: ${{github.workspace}}/src/test
      run: ${{github.workspace}}/build/${{env.BUILD_TYPE}}/src/test/lut_loader_test
